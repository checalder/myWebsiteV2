import turtle

wn = turtle.Screen()

wn.title("Pong!")

wn.bgcolor("black")

width = 1200
height = 800
upbound = 0.8 * height / 2
lowbound = -0.8 * height / 2
rightbound = 0.8 * width / 2
leftbound = -0.8 * width / 2
wn.setup(width, height)
# switch turtle animation off
wn.tracer(0)

pen = turtle.Turtle()
# set some properties of the pen


pen.speed(0)
pen.shape("square")
pen.color("white")
pen.penup()
pen.hideturtle()
pen.goto(leftbound, lowbound)
pen.pendown()
pen.setheading(0)

# draw bounding box
for i in range(2):
    pen.forward(0.8 * width)
    pen.left(90)
    pen.forward(0.8 * height)
    pen.left(90)

pen.penup()
pen.goto(0, 0.85 * height / 2)
pen.write("Lets Play!", align="center",
          font=("Courier", 24, "bold"))

# Create a Ball
ball = turtle.Turtle()
ball.speed(0)
ball.shape("circle")
ball.color("white")
ball.penup()
ball.goto(0, 0)
ball.dx = 0.1
ball.dy = 0.1

# Create Paddles


paddle1 = turtle.Turtle()
paddle1.speed(0)
paddle1.shape("square")
paddle1.color("white")
paddle1.shapesize(stretch_wid=5, stretch_len=1)
paddle1.penup()
paddle1.goto(-200, 0)

paddle2 = turtle.Turtle()
paddle2.speed(0)
paddle2.shape("square")
paddle2.color("white")
paddle2.shapesize(stretch_wid=5, stretch_len=1)
paddle2.penup()
paddle2.goto(200, 0)


# Paddle functions
def paddle1up():
    y = paddle1.ycor()
    y += 20
    paddle1.sety(y)


def paddle1down():
    y = paddle1.ycor()
    y -= 20
    paddle1.sety(y)


def paddle2up():
    y = paddle2.ycor()
    y += 20
    paddle2.sety(y)


def paddle2down():
    y = paddle2.ycor()
    y -= 20
    paddle2.sety(y)


wn.listen()
wn.onkeypress(paddle1up, "w")
wn.onkeypress(paddle1down, "s")
wn.onkeypress(paddle2up, "Up")
wn.onkeypress(paddle2down, "Down")

# Scoring
score1 = 0
score2 = 0

pen.penup()
pen.goto(-0.3 * width, 0.85 * height / 2)
pen.write("Player 1: ", align="center",
          font=("Courier", 24, "bold"))

pen.penup()
pen.goto(0.3 * width, 0.85 * height / 2)
pen.write("Player 2: ", align="center",
          font=("Courier", 24, "bold"))

pen2 = turtle.Turtle()
pen2.goto(-0.23 * width, 0.85 * height / 2)
pen3 = turtle.Turtle()
pen3.goto(0.37 * width, 0.85 * height / 2)

pen2.color("white")
pen2.hideturtle()
pen3.color("white")
pen3.hideturtle()
# Main game loop


while True:
    wn.update()
    # Use a turtle to draw a bounding box
    # Create a turtle called pen

    ball.setx(ball.xcor() + ball.dx)
    ball.sety(ball.ycor() + ball.dy)

    # paddle y axis boundaries must be within loop because they change when you go up
    paddle1boundtop = paddle1.ycor() + 50
    paddle1boundbottom = paddle1.ycor() - 50
    paddle2boundtop = paddle2.ycor() + 50
    paddle2boundbottom = paddle2.ycor() - 50

    # box boundary collision
    if ball.ycor() > upbound:
        ball.sety(upbound)
        ball.dy *= -1
    elif ball.ycor() < lowbound:
        ball.sety(lowbound)
        ball.dy *= -1
    elif ball.xcor() > rightbound:
        ball.sety(0)
        ball.setx(0)
        score1 += 1
        pen2.penup()
        pen2.clear()
        pen2.write(score1, font=("Courier", 24, "bold",))
        ball.dx *= -1
    elif ball.xcor() < leftbound:
        ball.sety(0)
        ball.setx(0)
        score2 += 1
        pen3.penup()
        pen3.clear()
        pen3.write(score2, font=("Courier", 24, "bold",))
        ball.dx *= -1

    # paddles dont move on the x axis boundaries so i can use specific integers for the front and back of the panels
    # The > and < define the boundaries of each paddle side so can be confusing as we go from negative x and positve values accross the screen

    elif ball.xcor() > 180 and ball.xcor() < 220 and ball.ycor() < paddle2boundtop and ball.ycor() > paddle2boundbottom:
        ball.dx *= -1
    elif ball.xcor() > -220 and ball.xcor() < -180 and ball.ycor() < paddle1boundtop and ball.ycor() > paddle1boundbottom:
        ball.dx *= -1


# cba to code the bottom boundary of the paddles tho
